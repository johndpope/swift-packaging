#! /usr/bin/perl

use strict;
use warnings;
use JSON::XS;
use IPC::Open2;

my $pid = open2(my $out, my $in, '/usr/lib/rpm/find-requires');

my $has_modules;
while (<STDIN>) {
	print $in $_;
	$has_modules = 1 if /\.swiftmodule$/;
}
close $in;

my $reqpkgs = '';
while (<$out>) {
	print;
	chomp;
	$reqpkgs .= `rpm -q --whatprovides '$_' --queryformat '%{NAME} %{VERSION}\n'`;
}
close $out;

waitpid($pid, 0);

my %requires;
$requires{$1} = $2 while $reqpkgs =~ /^(swift[\w-]*) ([\d\.]+)$/mg;
print "$_ >= $requires{$_}\n" foreach sort keys %requires;

if ($has_modules) {
	my ($builddir) = @ARGV;

	local $/ = undef;
	open my $f, '<', "$builddir/Package.swift" or die "Failed to open Package.swift";
	my $pkg = <$f>;
	close $f;
	open $f, '>', "$builddir/Package.swift" or die "Failed to open Package.swift";
	my $pkgtmp = $pkg;
	$pkgtmp =~ s/embed\.contains/!embed.contains/g;
	print $f $pkgtmp;
	close $f;
	my $data = decode_json(`cd $builddir && swift package dump-package`);
	foreach my $dep (@{$data->{dependencies}}) {
		print "swiftpm($dep->{url}) >= $dep->{version}->{lowerBound}\n";
	}
	open $f, '>', "$builddir/Package.swift" or die "Failed to open Package.swift";
	print $f $pkg;
	close $f;
}
